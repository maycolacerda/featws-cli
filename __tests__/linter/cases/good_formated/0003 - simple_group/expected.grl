
rule DefaultValues salience 10000000 {
    when 
        true
    then
        
        result.Put("clientingroup", "false");

        ctx.AddItem("mygroup_0_entries", "00000/00000000");
        
        Changed("ctx");
        Changed("result");
        Retract("DefaultValues");
}

rule RequiredParams salience 10000000 {
    when 
        true
    then
     
        ctx.SetRequiredConfigured();
        Changed("ctx");
        Retract("RequiredParams");
}

rule HasRequiredParamsError salience 9999999 {
    when 
        ctx.Has("requiredParamErrors") 
    then
        Complete();
}
rule feat_clientingroup salience 1000 {
    when 
        true 
    then
        ctx.Put("clientingroup", result.GetBool("mygroup"));
        
        result.Put("clientingroup", ctx.GetBool("clientingroup"));

        Changed("result");

        Retract("feat_clientingroup");
}

rule feat_mygroup_0_value salience 1003 {
    when 
        true 
    then
        ctx.Put("mygroup_0_value", ctx.GetString("branch")+"/"+ctx.GetString("account") + "");
        
        Retract("feat_mygroup_0_value");
}

rule feat_mygroup_0 salience 1002 {
    when 
        true 
    then
        ctx.Put("mygroup_0", processor.Contains(ctx.GetSlice("mygroup_0_entries"), ctx.Get("mygroup_0_value")));
        
        result.Put("mygroup_0", ctx.GetBool("mygroup_0"));

        Changed("result");

        Retract("feat_mygroup_0");
}

rule feat_mygroup salience 1001 {
    when 
        true 
    then
        ctx.Put("mygroup", result.GetBool("mygroup_0"));
        
        result.Put("mygroup", ctx.GetBool("mygroup"));

        Changed("result");

        Retract("feat_mygroup");
}
